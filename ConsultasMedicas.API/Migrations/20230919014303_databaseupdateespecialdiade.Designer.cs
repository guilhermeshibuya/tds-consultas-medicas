// <auto-generated />
using System;
using ConsultasMedicas.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsultasMedicas.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230919014303_databaseupdateespecialdiade")]
    partial class databaseupdateespecialdiade
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("ConsultasMedicas.API.Models.ConsultaModel", b =>
                {
                    b.Property<int?>("IdConsulta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataHoraConsulta")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdMedico")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdRecepcionista")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoConsulta")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdConsulta");

                    b.HasIndex("IdMedico");

                    b.HasIndex("IdPaciente");

                    b.HasIndex("IdRecepcionista");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("ConsultasMedicas.API.Models.EspecialidadeModel", b =>
                {
                    b.Property<int?>("IdEspecialidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeEspecialidade")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.HasKey("IdEspecialidade");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("ConsultasMedicas.API.Models.HorarioModel", b =>
                {
                    b.Property<int>("IdHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("HorarioDisponivel")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdMedico")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdHorario");

                    b.HasIndex("IdMedico");

                    b.ToTable("HorarioModel");
                });

            modelBuilder.Entity("ConsultasMedicas.API.Models.MedicoModel", b =>
                {
                    b.Property<int?>("IdMedico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CRM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdEspecialidade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.HasKey("IdMedico");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("ConsultasMedicas.API.Models.PacienteModel", b =>
                {
                    b.Property<int?>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HistoricoMedico")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.HasKey("IdPaciente");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("ConsultasMedicas.API.Models.RecepcionistaModel", b =>
                {
                    b.Property<int?>("IdRecepcionista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroTelefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.HasKey("IdRecepcionista");

                    b.ToTable("Recepcionistas");
                });

            modelBuilder.Entity("ConsultasMedicas.API.Models.ConsultaModel", b =>
                {
                    b.HasOne("ConsultasMedicas.API.Models.MedicoModel", "Medico")
                        .WithMany("Consultas")
                        .HasForeignKey("IdMedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsultasMedicas.API.Models.PacienteModel", "Paciente")
                        .WithMany("Consultas")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsultasMedicas.API.Models.RecepcionistaModel", "Recepcionista")
                        .WithMany("ConsultasAgendadas")
                        .HasForeignKey("IdRecepcionista");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");

                    b.Navigation("Recepcionista");
                });

            modelBuilder.Entity("ConsultasMedicas.API.Models.HorarioModel", b =>
                {
                    b.HasOne("ConsultasMedicas.API.Models.MedicoModel", "Medico")
                        .WithMany("HorariosDisponiveis")
                        .HasForeignKey("IdMedico");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("ConsultasMedicas.API.Models.MedicoModel", b =>
                {
                    b.Navigation("Consultas");

                    b.Navigation("HorariosDisponiveis");
                });

            modelBuilder.Entity("ConsultasMedicas.API.Models.PacienteModel", b =>
                {
                    b.Navigation("Consultas");
                });

            modelBuilder.Entity("ConsultasMedicas.API.Models.RecepcionistaModel", b =>
                {
                    b.Navigation("ConsultasAgendadas");
                });
#pragma warning restore 612, 618
        }
    }
}
