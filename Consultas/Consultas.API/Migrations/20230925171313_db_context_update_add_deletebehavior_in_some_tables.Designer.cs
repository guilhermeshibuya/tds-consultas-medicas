// <auto-generated />
using System;
using Consultas.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Consultas.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230925171313_db_context_update_add_deletebehavior_in_some_tables")]
    partial class db_context_update_add_deletebehavior_in_some_tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("Consultas.API.Models.ConsultaModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdMedico")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdPaciente")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdRecepcionista")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoConsulta")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdMedico");

                    b.HasIndex("IdPaciente");

                    b.HasIndex("IdRecepcionista");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("Consultas.API.Models.EspecialidadeModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("Consultas.API.Models.HorarioModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataHorario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdMedico")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdMedico");

                    b.ToTable("HorariosMedico");
                });

            modelBuilder.Entity("Consultas.API.Models.MedicoModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CRM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdEspecialidade")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CRM")
                        .IsUnique();

                    b.HasIndex("IdEspecialidade");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("Consultas.API.Models.PacienteModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("Consultas.API.Models.RecepcionistaModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.ToTable("Recepcionistas");
                });

            modelBuilder.Entity("Consultas.API.Models.ConsultaModel", b =>
                {
                    b.HasOne("Consultas.API.Models.MedicoModel", "Medico")
                        .WithMany("Consultas")
                        .HasForeignKey("IdMedico")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Consultas.API.Models.PacienteModel", "Paciente")
                        .WithMany("Consultas")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Consultas.API.Models.RecepcionistaModel", "Recepcionista")
                        .WithMany("Consultas")
                        .HasForeignKey("IdRecepcionista")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");

                    b.Navigation("Recepcionista");
                });

            modelBuilder.Entity("Consultas.API.Models.HorarioModel", b =>
                {
                    b.HasOne("Consultas.API.Models.MedicoModel", "Medico")
                        .WithMany("HorariosDisponiveis")
                        .HasForeignKey("IdMedico")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("Consultas.API.Models.MedicoModel", b =>
                {
                    b.HasOne("Consultas.API.Models.EspecialidadeModel", "Especialidade")
                        .WithMany("Medicos")
                        .HasForeignKey("IdEspecialidade")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Especialidade");
                });

            modelBuilder.Entity("Consultas.API.Models.EspecialidadeModel", b =>
                {
                    b.Navigation("Medicos");
                });

            modelBuilder.Entity("Consultas.API.Models.MedicoModel", b =>
                {
                    b.Navigation("Consultas");

                    b.Navigation("HorariosDisponiveis");
                });

            modelBuilder.Entity("Consultas.API.Models.PacienteModel", b =>
                {
                    b.Navigation("Consultas");
                });

            modelBuilder.Entity("Consultas.API.Models.RecepcionistaModel", b =>
                {
                    b.Navigation("Consultas");
                });
#pragma warning restore 612, 618
        }
    }
}
